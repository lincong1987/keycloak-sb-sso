<svg width="1200" height="1600" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <style>
      .title { font-family: Arial, sans-serif; font-size: 24px; font-weight: bold; fill: #2c3e50; }
      .subtitle { font-family: Arial, sans-serif; font-size: 16px; font-weight: bold; fill: #34495e; }
      .text { font-family: Arial, sans-serif; font-size: 12px; fill: #2c3e50; }
      .small-text { font-family: Arial, sans-serif; font-size: 10px; fill: #7f8c8d; }
      .client-box { fill: #e8f5e8; stroke: #27ae60; stroke-width: 2; }
      .server-box { fill: #e8f4fd; stroke: #3498db; stroke-width: 2; }
      .cache-box { fill: #fff3cd; stroke: #f39c12; stroke-width: 2; }
      .db-box { fill: #f8d7da; stroke: #e74c3c; stroke-width: 2; }
      .process-box { fill: #f0f0f0; stroke: #95a5a6; stroke-width: 2; }
      .arrow { stroke: #2c3e50; stroke-width: 2; fill: none; marker-end: url(#arrowhead); }
      .data-flow { stroke: #e74c3c; stroke-width: 2; fill: none; marker-end: url(#arrowhead); stroke-dasharray: 5,5; }
      .alarm-flow { stroke: #f39c12; stroke-width: 3; fill: none; marker-end: url(#arrowhead); }
    </style>
    <marker id="arrowhead" markerWidth="10" markerHeight="7" refX="9" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" fill="#2c3e50" />
    </marker>
  </defs>
  
  <!-- 标题 -->
  <text x="600" y="30" text-anchor="middle" class="title">监控模块使用流程和数据流动图</text>
  
  <!-- 客户端区域 -->
  <rect x="50" y="80" width="300" height="400" class="client-box" rx="10"/>
  <text x="200" y="105" text-anchor="middle" class="subtitle">监控客户端 (Monitor Client)</text>
  
  <!-- 客户端组件 -->
  <rect x="70" y="120" width="260" height="50" class="process-box" rx="5"/>
  <text x="200" y="140" text-anchor="middle" class="text">MonitorClientService</text>
  <text x="200" y="155" text-anchor="middle" class="small-text">监控客户端核心服务</text>
  
  <rect x="70" y="180" width="120" height="40" class="process-box" rx="5"/>
  <text x="130" y="195" text-anchor="middle" class="text">数据收集器</text>
  <text x="130" y="210" text-anchor="middle" class="small-text">CPU/内存/磁盘</text>
  
  <rect x="210" y="180" width="120" height="40" class="process-box" rx="5"/>
  <text x="270" y="195" text-anchor="middle" class="text">健康检查器</text>
  <text x="270" y="210" text-anchor="middle" class="small-text">DB/Redis/外部服务</text>
  
  <rect x="70" y="230" width="260" height="40" class="process-box" rx="5"/>
  <text x="200" y="245" text-anchor="middle" class="text">心跳信息构建器</text>
  <text x="200" y="260" text-anchor="middle" class="small-text">ClientHeartbeatInfo</text>
  
  <rect x="70" y="280" width="260" height="40" class="process-box" rx="5"/>
  <text x="200" y="295" text-anchor="middle" class="text">定时调度器</text>
  <text x="200" y="310" text-anchor="middle" class="small-text">@Scheduled 定时上报心跳</text>
  
  <rect x="70" y="330" width="260" height="40" class="process-box" rx="5"/>
  <text x="200" y="345" text-anchor="middle" class="text">HTTP客户端</text>
  <text x="200" y="360" text-anchor="middle" class="small-text">发送心跳到服务端</text>
  
  <rect x="70" y="380" width="260" height="80" class="process-box" rx="5"/>
  <text x="200" y="400" text-anchor="middle" class="text">监控配置自动装配</text>
  <text x="200" y="415" text-anchor="middle" class="small-text">MonitorClientAutoConfiguration</text>
  <text x="200" y="430" text-anchor="middle" class="small-text">- DruidDataSourceHealthImpl</text>
  <text x="200" y="445" text-anchor="middle" class="small-text">- DynamicDataSourceHealthImpl</text>
  <text x="200" y="460" text-anchor="middle" class="small-text">- RedisHealthImpl</text>
  
  <!-- 服务端区域 -->
  <rect x="450" y="80" width="350" height="500" class="server-box" rx="10"/>
  <text x="625" y="105" text-anchor="middle" class="subtitle">监控服务端 (Monitor Server)</text>
  
  <!-- 服务端组件 -->
  <rect x="470" y="120" width="310" height="50" class="process-box" rx="5"/>
  <text x="625" y="140" text-anchor="middle" class="text">MonitorServerController</text>
  <text x="625" y="155" text-anchor="middle" class="small-text">接收客户端心跳请求</text>
  
  <rect x="470" y="180" width="310" height="50" class="process-box" rx="5"/>
  <text x="625" y="200" text-anchor="middle" class="text">MonitorServerService</text>
  <text x="625" y="215" text-anchor="middle" class="small-text">处理心跳信息和离线告警</text>
  
  <rect x="470" y="240" width="150" height="40" class="process-box" rx="5"/>
  <text x="545" y="255" text-anchor="middle" class="text">MonitorAlarmService</text>
  <text x="545" y="270" text-anchor="middle" class="small-text">告警计算服务</text>
  
  <rect x="630" y="240" width="150" height="40" class="process-box" rx="5"/>
  <text x="705" y="255" text-anchor="middle" class="text">MonitorCacheService</text>
  <text x="705" y="270" text-anchor="middle" class="small-text">缓存管理服务</text>
  
  <rect x="470" y="290" width="310" height="50" class="process-box" rx="5"/>
  <text x="625" y="310" text-anchor="middle" class="text">MonitorSendMailService</text>
  <text x="625" y="325" text-anchor="middle" class="small-text">邮件告警发送服务</text>
  
  <rect x="470" y="350" width="310" height="60" class="process-box" rx="5"/>
  <text x="625" y="370" text-anchor="middle" class="text">监控调度器</text>
  <text x="625" y="385" text-anchor="middle" class="small-text">定时检查离线客户端</text>
  <text x="625" y="400" text-anchor="middle" class="small-text">定时清理过期数据</text>
  
  <rect x="470" y="420" width="310" height="80" class="process-box" rx="5"/>
  <text x="625" y="440" text-anchor="middle" class="text">告警阈值检查</text>
  <text x="625" y="455" text-anchor="middle" class="small-text">CPU阈值检查</text>
  <text x="625" y="470" text-anchor="middle" class="small-text">内存阈值检查</text>
  <text x="625" y="485" text-anchor="middle" class="small-text">磁盘阈值检查</text>
  
  <rect x="470" y="510" width="310" height="60" class="process-box" rx="5"/>
  <text x="625" y="530" text-anchor="middle" class="text">SystemMonitorService</text>
  <text x="625" y="545" text-anchor="middle" class="small-text">系统监控服务（性能分析、历史数据）</text>
  <text x="625" y="560" text-anchor="middle" class="small-text">健康检查、告警管理、日志监控</text>
  
  <!-- 缓存区域 -->
  <rect x="850" y="80" width="300" height="300" class="cache-box" rx="10"/>
  <text x="1000" y="105" text-anchor="middle" class="subtitle">Redis 缓存层</text>
  
  <rect x="870" y="120" width="260" height="40" class="process-box" rx="5"/>
  <text x="1000" y="135" text-anchor="middle" class="text">心跳信息缓存</text>
  <text x="1000" y="150" text-anchor="middle" class="small-text">KEY: heartbeat:{clientId}</text>
  
  <rect x="870" y="170" width="260" height="40" class="process-box" rx="5"/>
  <text x="1000" y="185" text-anchor="middle" class="text">客户端基本信息缓存</text>
  <text x="1000" y="200" text-anchor="middle" class="small-text">KEY: client:baseinfo:{clientId}</text>
  
  <rect x="870" y="220" width="260" height="40" class="process-box" rx="5"/>
  <text x="1000" y="235" text-anchor="middle" class="text">告警配置缓存</text>
  <text x="1000" y="250" text-anchor="middle" class="small-text">KEY: alarm:config</text>
  
  <rect x="870" y="270" width="260" height="40" class="process-box" rx="5"/>
  <text x="1000" y="285" text-anchor="middle" class="text">邮件发送记录缓存</text>
  <text x="1000" y="300" text-anchor="middle" class="small-text">KEY: client:send_mail:{clientId}:{source}</text>
  
  <rect x="870" y="320" width="260" height="50" class="process-box" rx="5"/>
  <text x="1000" y="335" text-anchor="middle" class="text">告警状态缓存</text>
  <text x="1000" y="350" text-anchor="middle" class="small-text">KEY: heartbeat_alarm:{clientId}:{source}</text>
  <text x="1000" y="365" text-anchor="middle" class="small-text">持续5分钟超阈值才告警</text>
  
  <!-- 数据库区域 -->
  <rect x="450" y="620" width="350" height="200" class="db-box" rx="10"/>
  <text x="625" y="645" text-anchor="middle" class="subtitle">MySQL 数据库</text>
  
  <rect x="470" y="660" width="150" height="40" class="process-box" rx="5"/>
  <text x="545" y="675" text-anchor="middle" class="text">tp_monitor_client</text>
  <text x="545" y="690" text-anchor="middle" class="small-text">客户端信息表</text>
  
  <rect x="630" y="660" width="150" height="40" class="process-box" rx="5"/>
  <text x="705" y="675" text-anchor="middle" class="text">tp_monitor_config</text>
  <text x="705" y="690" text-anchor="middle" class="small-text">监控配置表</text>
  
  <rect x="470" y="710" width="150" height="40" class="process-box" rx="5"/>
  <text x="545" y="725" text-anchor="middle" class="text">tp_send_mail_record</text>
  <text x="545" y="740" text-anchor="middle" class="small-text">邮件发送记录表</text>
  
  <rect x="630" y="710" width="150" height="40" class="process-box" rx="5"/>
  <text x="705" y="725" text-anchor="middle" class="text">system_log</text>
  <text x="705" y="740" text-anchor="middle" class="small-text">系统日志表</text>
  
  <rect x="470" y="760" width="310" height="50" class="process-box" rx="5"/>
  <text x="625" y="775" text-anchor="middle" class="text">监控历史数据表</text>
  <text x="625" y="790" text-anchor="middle" class="small-text">性能数据、告警历史、健康检查记录</text>
  <text x="625" y="805" text-anchor="middle" class="small-text">（由SystemMonitorService管理）</text>
  
  <!-- 邮件服务区域 -->
  <rect x="850" y="420" width="300" height="120" class="process-box" rx="10"/>
  <text x="1000" y="445" text-anchor="middle" class="subtitle">邮件告警服务</text>
  
  <rect x="870" y="460" width="260" height="30" class="process-box" rx="5"/>
  <text x="1000" y="475" text-anchor="middle" class="text">SMTP邮件发送</text>
  
  <rect x="870" y="500" width="260" height="30" class="process-box" rx="5"/>
  <text x="1000" y="515" text-anchor="middle" class="text">告警内容模板化</text>
  
  <!-- 数据流箭头 -->
  <!-- 客户端到服务端 -->
  <line x1="350" y1="200" x2="450" y2="150" class="data-flow"/>
  <text x="400" y="170" class="small-text">HTTP POST</text>
  <text x="400" y="185" class="small-text">心跳数据</text>
  
  <!-- 服务端到缓存 -->
  <line x1="780" y1="200" x2="850" y2="200" class="arrow"/>
  <text x="815" y="195" class="small-text">缓存</text>
  
  <!-- 服务端到数据库 -->
  <line x1="625" y1="580" x2="625" y2="620" class="arrow"/>
  <text x="635" y="600" class="small-text">持久化</text>
  
  <!-- 告警流程 -->
  <line x1="625" y1="340" x2="850" y2="480" class="alarm-flow"/>
  <text x="730" y="400" class="small-text">触发告警</text>
  
  <!-- 流程步骤说明 -->
  <rect x="50" y="900" width="1100" height="650" class="process-box" rx="10"/>
  <text x="600" y="930" text-anchor="middle" class="subtitle">监控模块详细流程说明</text>
  
  <!-- 步骤1 -->
  <text x="70" y="960" class="subtitle">1. 客户端数据收集阶段</text>
  <text x="90" y="980" class="text">• MonitorClientService 通过定时调度器(@Scheduled)每隔一定时间执行数据收集</text>
  <text x="90" y="1000" class="text">• 数据收集器收集系统资源信息：CPU使用率、内存使用率、磁盘使用率</text>
  <text x="90" y="1020" class="text">• 健康检查器检查各种服务状态：数据库连接、Redis连接、外部服务状态</text>
  <text x="90" y="1040" class="text">• 心跳信息构建器将收集到的数据封装成ClientHeartbeatInfo对象</text>
  
  <!-- 步骤2 -->
  <text x="70" y="1080" class="subtitle">2. 数据传输阶段</text>
  <text x="90" y="1100" class="text">• HTTP客户端将心跳信息通过POST请求发送到监控服务端</text>
  <text x="90" y="1120" class="text">• 请求路径：/monitor/heartbeat，包含完整的系统监控数据</text>
  
  <!-- 步骤3 -->
  <text x="70" y="1160" class="subtitle">3. 服务端数据处理阶段</text>
  <text x="90" y="1180" class="text">• MonitorServerController接收心跳请求，调用MonitorServerService处理</text>
  <text x="90" y="1200" class="text">• MonitorCacheService将心跳信息缓存到Redis，设置过期时间</text>
  <text x="90" y="1220" class="text">• 更新客户端基本信息缓存，记录最后心跳时间</text>
  <text x="90" y="1240" class="text">• MonitorAlarmService检查资源使用率是否超过配置的阈值</text>
  
  <!-- 步骤4 -->
  <text x="70" y="1280" class="subtitle">4. 告警判断阶段</text>
  <text x="90" y="1300" class="text">• 从缓存中获取告警配置(tp_monitor_config表数据)</text>
  <text x="90" y="1320" class="text">• 比较CPU、内存、磁盘使用率与配置的阈值</text>
  <text x="90" y="1340" class="text">• 如果超过阈值，检查是否已持续5分钟(CONTINUE_MINUTE)</text>
  <text x="90" y="1360" class="text">• 检查12小时内是否已发送过相同类型的告警邮件</text>
  
  <!-- 步骤5 -->
  <text x="70" y="1400" class="subtitle">5. 告警通知阶段</text>
  <text x="90" y="1420" class="text">• 如果满足告警条件，MonitorSendMailService发送告警邮件</text>
  <text x="90" y="1440" class="text">• 邮件内容包含：客户端信息、超阈值的资源类型、具体数值</text>
  <text x="90" y="1460" class="text">• 发送成功后，在缓存中记录已发送邮件，12小时内不重复发送</text>
  <text x="90" y="1480" class="text">• 同时记录邮件发送记录到tp_send_mail_record表</text>
  
  <!-- 步骤6 -->
  <text x="70" y="1520" class="subtitle">6. 离线检测阶段</text>
  <text x="90" y="1540" class="text">• 服务端定时调度器检查客户端最后心跳时间</text>
  <text x="90" y="1560" class="text">• 如果超过5分钟(OFFLINE_MINUTE)未收到心跳，判定为离线</text>
  <text x="90" y="1580" class="text">• 触发离线告警，发送离线通知邮件</text>
  
  <!-- 步骤7 -->
  <text x="70" y="1620" class="subtitle">7. 数据持久化阶段</text>
  <text x="90" y="1640" class="text">• 客户端信息持久化到tp_monitor_client表</text>
  <text x="90" y="1660" class="text">• 监控配置持久化到tp_monitor_config表</text>
  <text x="90" y="1680" class="text">• SystemMonitorService管理历史性能数据、告警记录、健康检查记录</text>
  <text x="90" y="1700" class="text">• 支持性能分析、趋势分析、报表生成等高级功能</text>
  
  <!-- 关键特性说明 -->
  <rect x="50" y="1730" width="1100" height="150" class="cache-box" rx="10"/>
  <text x="600" y="1760" text-anchor="middle" class="subtitle">关键特性</text>
  <text x="90" y="1790" class="text">• 防重复告警：12小时内相同类型告警只发送一次</text>
  <text x="90" y="1810" class="text">• 持续性检查：资源超阈值需持续5分钟才触发告警，避免瞬时波动</text>
  <text x="90" y="1830" class="text">• 多维度监控：CPU、内存、磁盘、数据库、Redis、外部服务全方位监控</text>
  <text x="90" y="1850" class="text">• 高可用设计：Redis缓存 + MySQL持久化，支持集群部署</text>
  <text x="90" y="1870" class="text">• 可配置化：告警阈值、邮件接收人、发送频率等均可配置</text>
  
</svg>